1. SpringMVC WebSite 생성하기
1.1 : SpringFrameWork (jar 추가하기)
	-Web , Web-MVC (jar 파일 추가)
1.2 : Web.xml 설정하기
	- org.springframework.web.servlet.DispatcherServlet
	  (단일 FrontController 설정하기)
	- url-pattern > *.htm or *.do or *. action 등등
	
1.3 : DispatcherServlet read 해서 사용할 DI 구성하기
	  [servlet-name]-servlet.xml
	  xml 안에서 bean 생성하고 injection(constructor, setter)
	  -xml 기반으로 , Annotation 기반 (<context:annotation-config/>)
	  
1.4 : SpringMVC (Model, View, Controller)
-Model(dto(vo)(domain) , dao(DB 작업))
-View( EL & JSTL)
-Controller 변화 ( public class NoticeController implements Controller 구현
				  handleRequest 함수 구현
				   단점 : 기능 당 클래스 하나 > 사용할 수 있는 함수 하나(handleRequest)
				   더 이상 사용(X)
				   게시판 글쓰기 , 목록 , 상세 -> Controller 3개 구현)
				   
*******
	해결 : 클래스 하나가 여러개의 기능을 처리 (함수를 여러개)
	함수 단위로 기능을 처리
	함수가 mapping 자원
	-HandlerMapping : [함수 단위로]
	@Controller
	class Board {
		
		@RequestMapping("/list.do")
		listBoard(){}
		
		@RequestMapping("/listDetail.do")
		BoardInsert(){}
	}
	
	
1.5 실습 구성
	-com.controller
	-WEB-INF > view 설정
	-default> webcontent>index.html	
	
********************************************************
개요 : spring MVC의 Controller 클래스 선언을 단순화시켜준다. 스프링 컨트롤러, 
서블릿을 상속할 필요가 없으며, @Controller로 등록된 클래스 파일에 대한 bean을 자동으로 생성해준다.

Controller로 사용하고자 하는 클래스에 @Controller 지정해 주면 component-scan으로 자동 등록된다.

<context:component-scan base-package="com.controller "/>


	